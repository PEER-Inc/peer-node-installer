name: SonarQube_and_Backups

env:

  ## Access to dev AWS
  DEV_AWS_ACCESS_KEY_ID      : ${{ secrets.AWS_ACCESS_KEY }}
  DEV_AWS_SECRET_ACCESS_KEY  : ${{ secrets.AWS_SECRET_KEY }}
  DEV_AWS_REGION             : 'us-west-2'

  # Access to BlackBaze Bucket:
  BACKBLAZE_APP_ID       : ${{ secrets.B2_APPKEY_ID }}
  BACKBLAZE_APP_KEY      : ${{ secrets.B2_APPKEY }}

  # Parameters for B2 bucket.
  BACKBLAZE_B2BUCKET     : 'b2://peer-github-backup/peer-node-installer'
  BACKBLAZE_B2_BUCKET_ID : 'fa678cdb8dd78a53814e0913'

  # Parameters for making a backup-file:
  CURRENT_GITHUB_BRANCH  : ${GITHUB_REF##*/}
  TIME                   : $(date +'%Y-%m-%d')
  GITHUB_REPOSITORY      : ${{ github.event.repository.name }}
  BACKUP_DIR             : 'backups'

  # Parameters for SonarQube:
  SONAR_TOKEN            : ${{ secrets.SONAR_TOKEN }}
  #SONAR_HOST_URL         : ${{ secrets.SONAR_HOST_URL }}
  SONAR_HOST_URL         : 'https://sq.peer.inc/'
  FETCH_DEPT             : '0'

  # WAF
  IP_SET_ID              : ${{ secrets.IP_SET_ID }}
  REGION                 : 'us-west-2'


  # Prod AWS Account
  PROD_AWS_ACCESS_KEY_ID     : ${{ secrets.AWS_ACCESS_KEY_WEB_PROD }}
  PROD_AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_KEY_WEB_PROD }}
  PROD_AWS_REGION            : 'us-west-2'

on:
  push:
    branches:
      - 'master'

  pull_request:
    branches:
      - 'master'


jobs:
# Part 1: CI
  Deploying:
    runs-on: ubuntu-latest
    steps:
    - name: Git clone repo
      uses: actions/checkout@v2

#############################
# Part 1: Enable in WAF #####
#############################

    - name: Add Public IP to Allow
      uses: iDVB/wafv2-allow-action@v1
      with:
        action: add
        ipset_id: 523c835d-741a-4f08-8aca-4003eb2e0133
        ipset_name: Peer-Team-IP-Set
        ipset_scope: REGIONAL
      env:
        AWS_DEFAULT_REGION: us-west-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

##############################################
# Part 2: Sent code to SonarQube for scan ####
##############################################

    - name: set SonarQube project
      run: echo "sonar.projectKey=${{ env.GITHUB_REPOSITORY}}" > sonar-project.properties
    - run: sleep 20

    - name: SonarQube Scan
      uses: monstar-lab-oss/sonarqube-github-action@v1.0.1
      with:
        url: ${{ env.SONAR_HOST_URL }}
        token: ${{ env.SONAR_TOKEN }}


#############################
# Part 1: Disable in WAF ####
#############################
    - name: Remove Public IP from Allow
      uses: iDVB/wafv2-allow-action@v1
      with:
        action: remove
        ipset_id: 523c835d-741a-4f08-8aca-4003eb2e0133
        ipset_name: Peer-Team-IP-Set
        ipset_scope: REGIONAL
      env:
        AWS_DEFAULT_REGION: us-west-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

##################################
####### Backups ##################
##################################

#Create archieve of branch
    - name: Create backup-archive of branch
      run: tar cpzf $(echo "${{ github.event.repository.name }}-${GITHUB_REF##*/}" | sed -e 's/\.//g' -e 's/\///g').zip *
    - run: ls -a
    - run: echo $(tar)
    - run: mkdir ${{ env.BACKUP_DIR }}
    - run: mv *zip ${{ env.BACKUP_DIR }}

# Copy backups to BackBlaze
    - name: Copy archive to B2
      id: backups
      uses: PEER-Inc/backblaze-b2-custom-action@main
      env:
          B2_BUCKET: ${{ env.BACKBLAZE_B2BUCKET }}
          B2_APPKEY_ID: ${{ secrets.B2_APPKEY_ID }}
          B2_APPKEY: ${{ secrets.B2_APPKEY }}
          SOURCE_DIR: '${{ env.BACKUP_DIR }}/'


###########################################
# Part 6: Reporting #######################
###########################################

    - name: Sent report
      run:  |
        aws sns publish \
          --topic-arn "arn:aws:sns:us-west-2:770080080051:Backups" \
          --subject "GITHUB Backups was successful: ${{ env.GITHUB_REPOSITORY }}" \
          --message "Backups to BlackBlaze was successful: Repository: ${{ env.GITHUB_REPOSITORY }} Branch: ${{ env.CURRENT_GITHUB_BRANCH }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ env.PROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.PROD_AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.PROD_AWS_REGION }}
#
#
#
